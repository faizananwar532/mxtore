name: Deploy to S3

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
          
      - name: Deploy to S3
        run: |
          # Create a temporary directory for files to upload
          mkdir -p deploy_files
          
          # Copy all website files excluding specific ones
          rsync -av --exclude='.git/' \
                    --exclude='.github/' \
                    --exclude='.gitignore' \
                    --exclude='README.md' \
                    --exclude='LICENSE' \
                    --exclude='*.yml' \
                    ./ deploy_files/
          
          # Upload to S3 with appropriate cache settings
          aws s3 sync deploy_files/ s3://${{ secrets.AWS_S3_BUCKET }} \
            --delete \
            --cache-control "max-age=86400" \
            --exclude "*.html" # Don't cache HTML files
          
          # Upload HTML files with no-cache directive
          aws s3 sync deploy_files/ s3://${{ secrets.AWS_S3_BUCKET }} \
            --exclude "*" \
            --include "*.html" \
            --cache-control "no-cache,no-store,must-revalidate"
          
    #   - name: Invalidate CloudFront distribution
    #     if: env.CLOUDFRONT_DISTRIBUTION_ID != ''
    #     env:
    #       CLOUDFRONT_DISTRIBUTION_ID: ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}
    #     run: |
    #       aws cloudfront create-invalidation \
    #         --distribution-id $CLOUDFRONT_DISTRIBUTION_ID \
    #         --paths "/*" 